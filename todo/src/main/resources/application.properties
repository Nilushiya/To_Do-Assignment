spring.application.name=todo

# Datasource
#local
#spring.datasource.url=jdbc:postgresql://localhost:5432/todo_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver

#doker
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Cache
spring.cache.type=simple

# Server port
server.port=8081

# Keycloak
keycloak.auth-server-url=http://keycloak:8080
keycloak.realm=todo-realm
keycloak.resource=todo-client
keycloak.public-client=true
keycloak.bearer-only=true



# Keycloak realm and issuer
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/todo-realm

# OAuth2 client for backend service (confidential)
spring.security.oauth2.client.registration.keycloak-client.client-id=todo-client
spring.security.oauth2.client.registration.keycloak-client.client-secret=**********
spring.security.oauth2.client.registration.keycloak-client.authorization-grant-type=refresh_token
spring.security.oauth2.client.registration.keycloak-client.scope=openid
spring.security.oauth2.client.provider.keycloak-client.issuer-uri=http://keycloak:8080/realms/todo-realm

